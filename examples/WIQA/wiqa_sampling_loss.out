* Owlready2 * Warning: optimized Cython parser module 'owlready2_optimized' is not available, defaulting to slower Python implementation
/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/WIQA_aug.py:84: UserWarning: Please use OrderedDict rather than dict to prevent unpredictable order of arguments.For this instance, OrderedDict([('arg1', 'question'), ('arg2', 'question')]) is used.
  s_arg1, s_arg2 = symmetric.has_a(arg1=question, arg2=question)
/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/WIQA_aug.py:95: UserWarning: Please use OrderedDict rather than dict to prevent unpredictable order of arguments.For this instance, OrderedDict([('arg11', 'question'), ('arg22', 'question'), ('arg33', 'question')]) is used.
  t_arg1, t_arg2, t_arg3 = transitive.has_a(arg11=question, arg22=question, arg33=question)
Some weights of the model checkpoint at roberta-base were not used when initializing RobertaModel: ['lm_head.decoder.weight', 'lm_head.layer_norm.weight', 'lm_head.layer_norm.bias', 'lm_head.bias', 'lm_head.dense.bias', 'lm_head.dense.weight']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
INFO:regr.program.program:Epoch: 1
INFO:regr.program.program:Training:
Log file for dataNode is in: /data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/logs/datanode.log
Graph Declaration:
Sensor Part:
simple program
Semantic Loss program
this epoch is number: 0 &&&&&&&&&&

Epoch 1 Training:   0%|          | 0/29714 [00:00<?, ?it/s]
Epoch 1 Training:   0%|          | 3/29714 [00:00<17:26, 28.40it/s]
Epoch 1 Training:   0%|          | 6/29714 [00:00<17:31, 28.26it/s]
Epoch 1 Training:   0%|          | 9/29714 [00:00<17:11, 28.81it/s]
Epoch 1 Training:   0%|          | 12/29714 [00:00<18:26, 26.85it/s]
Epoch 1 Training:   0%|          | 15/29714 [00:00<17:51, 27.72it/s]
Epoch 1 Training:   0%|          | 18/29714 [00:00<18:21, 26.97it/s]
Epoch 1 Training:   0%|          | 21/29714 [00:00<18:00, 27.48it/s]
Epoch 1 Training:   0%|          | 24/29714 [00:00<18:07, 27.30it/s]
Epoch 1 Training:   0%|          | 27/29714 [00:01<20:28, 24.16it/s]
Epoch 1 Training:   0%|          | 30/29714 [00:01<20:35, 24.02it/s]
Epoch 1 Training:   0%|          | 33/29714 [00:01<19:41, 25.11it/s]
Epoch 1 Training:   0%|          | 36/29714 [00:01<19:42, 25.10it/s]
Epoch 1 Training:   0%|          | 39/29714 [00:01<19:04, 25.94it/s]Error CUDA out of memory. Tried to allocate 20.00 MiB (GPU 0; 23.65 GiB total capacity; 22.16 GiB already allocated; 4.31 MiB free; 22.19 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF during updating data item {'paragraph_intext': 'The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.', 'more_list': '0@@0', 'less_list': '1@@1', 'no_effect_list': '0@@0', 'question_list': 'suppose more mass pulled happens, how will it affect less light to travel.@@suppose less mass pulled happens, how will it affect more light to travel.', 'quest_ids': 'influence_graph:1167:115:56#3_symmetric_one@@influence_graph:1167:115:56#3_symmetric_three', 'graph': Graph(name='WIQA_graph', fullname='WIQA_graph'), 'READER': 0, 'Counter_setitem': 31, 'Counter/WIQA_graph/paragraph/paragraph_intext/readersensor': {'The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.': {'counter': 1, 'recent': True}}, 'dataNode': [paragraph 0], 'WIQA_graph/paragraph/index': [paragraph 0], ReaderSensor(name='readersensor', fullname='WIQA_graph/paragraph/paragraph_intext/readersensor'): 'The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.', 'DataNodeTime': 0.003195524215698242, Property(name='paragraph_intext', fullname='WIQA_graph/paragraph/paragraph_intext'): 'The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.', 'Counter/WIQA_graph/paragraph/question_list/readersensor-1': {'suppose more mass pulled happens, how will it affect less light to travel.@@suppose less mass pulled happens, how will it affect more light to travel.': {'counter': 1, 'recent': True}}, ReaderSensor(name='readersensor-1', fullname='WIQA_graph/paragraph/question_list/readersensor-1'): 'suppose more mass pulled happens, how will it affect less light to travel.@@suppose less mass pulled happens, how will it affect more light to travel.', Property(name='question_list', fullname='WIQA_graph/paragraph/question_list'): 'suppose more mass pulled happens, how will it affect less light to travel.@@suppose less mass pulled happens, how will it affect more light to travel.', 'Counter/WIQA_graph/paragraph/less_list/readersensor-2': {'1@@1': {'counter': 1, 'recent': True}}, ReaderSensor(name='readersensor-2', fullname='WIQA_graph/paragraph/less_list/readersensor-2'): '1@@1', Property(name='less_list', fullname='WIQA_graph/paragraph/less_list'): '1@@1', 'Counter/WIQA_graph/paragraph/more_list/readersensor-3': {'0@@0': {'counter': 1, 'recent': True}}, ReaderSensor(name='readersensor-3', fullname='WIQA_graph/paragraph/more_list/readersensor-3'): '0@@0', Property(name='more_list', fullname='WIQA_graph/paragraph/more_list'): '0@@0', 'Counter/WIQA_graph/paragraph/no_effect_list/readersensor-4': {'0@@0': {'counter': 1, 'recent': True}}, ReaderSensor(name='readersensor-4', fullname='WIQA_graph/paragraph/no_effect_list/readersensor-4'): '0@@0', Property(name='no_effect_list', fullname='WIQA_graph/paragraph/no_effect_list'): '0@@0', 'Counter/WIQA_graph/paragraph/quest_ids/readersensor-5': {'influence_graph:1167:115:56#3_symmetric_one@@influence_graph:1167:115:56#3_symmetric_three': {'counter': 1, 'recent': True}}, ReaderSensor(name='readersensor-5', fullname='WIQA_graph/paragraph/quest_ids/readersensor-5'): 'influence_graph:1167:115:56#3_symmetric_one@@influence_graph:1167:115:56#3_symmetric_three', Property(name='quest_ids', fullname='WIQA_graph/paragraph/quest_ids'): 'influence_graph:1167:115:56#3_symmetric_one@@influence_graph:1167:115:56#3_symmetric_three', JointSensor(name='jointsensor', fullname='WIQA_graph/question/(Contains(name='paragraph-contains-0-question', fullname='WIQA_graph/paragraph-contains-0-question'), 'question_paragraph', 'text', 'is_more_', 'is_less_', 'no_effect_', 'quest_id')/jointsensor'): (tensor([[1.],
        [1.]]), ['The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.', 'The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.'], ['suppose more mass pulled happens, how will it affect less light to travel.', 'suppose less mass pulled happens, how will it affect more light to travel.'], tensor([[1],
        [1]]), tensor([[0],
        [0]]), tensor([[0],
        [0]]), ['influence_graph:1167:115:56#3_symmetric_one', 'influence_graph:1167:115:56#3_symmetric_three']), Property(name='(Contains(name='paragraph-contains-0-question', fullname='WIQA_graph/paragraph-contains-0-question'), 'question_paragraph', 'text', 'is_more_', 'is_less_', 'no_effect_', 'quest_id')', fullname='WIQA_graph/question/(Contains(name='paragraph-contains-0-question', fullname='WIQA_graph/paragraph-contains-0-question'), 'question_paragraph', 'text', 'is_more_', 'is_less_', 'no_effect_', 'quest_id')'): (tensor([[1.],
        [1.]]), ['The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.', 'The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.'], ['suppose more mass pulled happens, how will it affect less light to travel.', 'suppose less mass pulled happens, how will it affect more light to travel.'], tensor([[1],
        [1]]), tensor([[0],
        [0]]), tensor([[0],
        [0]]), ['influence_graph:1167:115:56#3_symmetric_one', 'influence_graph:1167:115:56#3_symmetric_three']), 'Counter/WIQA_graph/question/paragraph-contains-0-question/edgesensor': {tensor([[1.],
        [1.]], device='cuda:0'): {'counter': 1, 'recent': True}}, 'WIQA_graph/question/index': [question 0, question 1], EdgeSensor(name='edgesensor', fullname='WIQA_graph/question/paragraph-contains-0-question/edgesensor'): tensor([[1.],
        [1.]], device='cuda:0'), Property(name='paragraph-contains-0-question', fullname='WIQA_graph/question/paragraph-contains-0-question'): tensor([[1.],
        [1.]], device='cuda:0'), 'Counter/WIQA_graph/question/is_less_/functionalsensor-3': {tensor([[0],
        [0]], device='cuda:0'): {'counter': 1, 'recent': True}}, FunctionalSensor(name='functionalsensor-3', fullname='WIQA_graph/question/is_less_/functionalsensor-3'): tensor([[0],
        [0]], device='cuda:0'), Property(name='is_less_', fullname='WIQA_graph/question/is_less_'): tensor([[0],
        [0]], device='cuda:0'), 'Counter/WIQA_graph/question/<is_less>/functionalsensor-9': {tensor([[0],
        [0]], device='cuda:0'): {'counter': 1, 'recent': True}}, FunctionalSensor(name='functionalsensor-9', fullname='WIQA_graph/question/<is_less>/functionalsensor-9'): tensor([[0],
        [0]], device='cuda:0'), Property(name='is_less', fullname='WIQA_graph/question/<is_less>'): tensor([[0],
        [0]], device='cuda:0'), 'Counter/WIQA_graph/question/question_paragraph/functionalsensor': {('The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.', 'The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.'): {'counter': 1, 'recent': True}}, FunctionalSensor(name='functionalsensor', fullname='WIQA_graph/question/question_paragraph/functionalsensor'): ['The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.', 'The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.'], Property(name='question_paragraph', fullname='WIQA_graph/question/question_paragraph'): ['The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.', 'The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.'], 'Counter/WIQA_graph/question/text/functionalsensor-1': {('suppose more mass pulled happens, how will it affect less light to travel.', 'suppose less mass pulled happens, how will it affect more light to travel.'): {'counter': 1, 'recent': True}}, FunctionalSensor(name='functionalsensor-1', fullname='WIQA_graph/question/text/functionalsensor-1'): ['suppose more mass pulled happens, how will it affect less light to travel.', 'suppose less mass pulled happens, how will it affect more light to travel.'], Property(name='text', fullname='WIQA_graph/question/text'): ['suppose more mass pulled happens, how will it affect less light to travel.', 'suppose less mass pulled happens, how will it affect more light to travel.'], JointSensor(name='jointsensor-1', fullname='WIQA_graph/question/('token_ids', 'Mask')/jointsensor-1'): (tensor([[    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,    55,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,   540,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1],
        [    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,   540,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,    55,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1]]), tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])), Property(name='('token_ids', 'Mask')', fullname='WIQA_graph/question/('token_ids', 'Mask')'): (tensor([[    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,    55,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,   540,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1],
        [    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,   540,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,    55,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1]]), tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])), 'Counter/WIQA_graph/question/token_ids/functionalsensor-6': {tensor([[    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,    55,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,   540,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1],
        [    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,   540,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,    55,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1]], device='cuda:0'): {'counter': 1, 'recent': True}}, FunctionalSensor(name='functionalsensor-6', fullname='WIQA_graph/question/token_ids/functionalsensor-6'): tensor([[    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,    55,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,   540,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1],
        [    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,   540,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,    55,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1]], device='cuda:0'), Property(name='token_ids', fullname='WIQA_graph/question/token_ids'): tensor([[    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,    55,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,   540,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1],
        [    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,   540,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,    55,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1]], device='cuda:0'), 'Counter/WIQA_graph/question/Mask/functionalsensor-7': {tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0'): {'counter': 1, 'recent': True}}, FunctionalSensor(name='functionalsensor-7', fullname='WIQA_graph/question/Mask/functionalsensor-7'): tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0'), Property(name='Mask', fullname='WIQA_graph/question/Mask'): tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0')} with sensor WIQA_graph/question/robert_emb/modulelearner
Error CUDA out of memory. Tried to allocate 20.00 MiB (GPU 0; 23.65 GiB total capacity; 22.16 GiB already allocated; 4.31 MiB free; 22.19 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF during updating data item {'paragraph_intext': 'The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.', 'more_list': '0@@0', 'less_list': '1@@1', 'no_effect_list': '0@@0', 'question_list': 'suppose more mass pulled happens, how will it affect less light to travel.@@suppose less mass pulled happens, how will it affect more light to travel.', 'quest_ids': 'influence_graph:1167:115:56#3_symmetric_one@@influence_graph:1167:115:56#3_symmetric_three', 'graph': Graph(name='WIQA_graph', fullname='WIQA_graph'), 'READER': 0, 'Counter_setitem': 31, 'Counter/WIQA_graph/paragraph/paragraph_intext/readersensor': {'The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.': {'counter': 1, 'recent': True}}, 'dataNode': [paragraph 0], 'WIQA_graph/paragraph/index': [paragraph 0], ReaderSensor(name='readersensor', fullname='WIQA_graph/paragraph/paragraph_intext/readersensor'): 'The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.', 'DataNodeTime': 0.003195524215698242, Property(name='paragraph_intext', fullname='WIQA_graph/paragraph/paragraph_intext'): 'The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.', 'Counter/WIQA_graph/paragraph/question_list/readersensor-1': {'suppose more mass pulled happens, how will it affect less light to travel.@@suppose less mass pulled happens, how will it affect more light to travel.': {'counter': 1, 'recent': True}}, ReaderSensor(name='readersensor-1', fullname='WIQA_graph/paragraph/question_list/readersensor-1'): 'suppose more mass pulled happens, how will it affect less light to travel.@@suppose less mass pulled happens, how will it affect more light to travel.', Property(name='question_list', fullname='WIQA_graph/paragraph/question_list'): 'suppose more mass pulled happens, how will it affect less light to travel.@@suppose less mass pulled happens, how will it affect more light to travel.', 'Counter/WIQA_graph/paragraph/less_list/readersensor-2': {'1@@1': {'counter': 1, 'recent': True}}, ReaderSensor(name='readersensor-2', fullname='WIQA_graph/paragraph/less_list/readersensor-2'): '1@@1', Property(name='less_list', fullname='WIQA_graph/paragraph/less_list'): '1@@1', 'Counter/WIQA_graph/paragraph/more_list/readersensor-3': {'0@@0': {'counter': 1, 'recent': True}}, ReaderSensor(name='readersensor-3', fullname='WIQA_graph/paragraph/more_list/readersensor-3'): '0@@0', Property(name='more_list', fullname='WIQA_graph/paragraph/more_list'): '0@@0', 'Counter/WIQA_graph/paragraph/no_effect_list/readersensor-4': {'0@@0': {'counter': 1, 'recent': True}}, ReaderSensor(name='readersensor-4', fullname='WIQA_graph/paragraph/no_effect_list/readersensor-4'): '0@@0', Property(name='no_effect_list', fullname='WIQA_graph/paragraph/no_effect_list'): '0@@0', 'Counter/WIQA_graph/paragraph/quest_ids/readersensor-5': {'influence_graph:1167:115:56#3_symmetric_one@@influence_graph:1167:115:56#3_symmetric_three': {'counter': 1, 'recent': True}}, ReaderSensor(name='readersensor-5', fullname='WIQA_graph/paragraph/quest_ids/readersensor-5'): 'influence_graph:1167:115:56#3_symmetric_one@@influence_graph:1167:115:56#3_symmetric_three', Property(name='quest_ids', fullname='WIQA_graph/paragraph/quest_ids'): 'influence_graph:1167:115:56#3_symmetric_one@@influence_graph:1167:115:56#3_symmetric_three', JointSensor(name='jointsensor', fullname='WIQA_graph/question/(Contains(name='paragraph-contains-0-question', fullname='WIQA_graph/paragraph-contains-0-question'), 'question_paragraph', 'text', 'is_more_', 'is_less_', 'no_effect_', 'quest_id')/jointsensor'): (tensor([[1.],
        [1.]]), ['The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.', 'The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.'], ['suppose more mass pulled happens, how will it affect less light to travel.', 'suppose less mass pulled happens, how will it affect more light to travel.'], tensor([[1],
        [1]]), tensor([[0],
        [0]]), tensor([[0],
        [0]]), ['influence_graph:1167:115:56#3_symmetric_one', 'influence_graph:1167:115:56#3_symmetric_three']), Property(name='(Contains(name='paragraph-contains-0-question', fullname='WIQA_graph/paragraph-contains-0-question'), 'question_paragraph', 'text', 'is_more_', 'is_less_', 'no_effect_', 'quest_id')', fullname='WIQA_graph/question/(Contains(name='paragraph-contains-0-question', fullname='WIQA_graph/paragraph-contains-0-question'), 'question_paragraph', 'text', 'is_more_', 'is_less_', 'no_effect_', 'quest_id')'): (tensor([[1.],
        [1.]]), ['The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.', 'The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.'], ['suppose more mass pulled happens, how will it affect less light to travel.', 'suppose less mass pulled happens, how will it affect more light to travel.'], tensor([[1],
        [1]]), tensor([[0],
        [0]]), tensor([[0],
        [0]]), ['influence_graph:1167:115:56#3_symmetric_one', 'influence_graph:1167:115:56#3_symmetric_three']), 'Counter/WIQA_graph/question/paragraph-contains-0-question/edgesensor': {tensor([[1.],
        [1.]], device='cuda:0'): {'counter': 1, 'recent': True}}, 'WIQA_graph/question/index': [question 0, question 1], EdgeSensor(name='edgesensor', fullname='WIQA_graph/question/paragraph-contains-0-question/edgesensor'): tensor([[1.],
        [1.]], device='cuda:0'), Property(name='paragraph-contains-0-question', fullname='WIQA_graph/question/paragraph-contains-0-question'): tensor([[1.],
        [1.]], device='cuda:0'), 'Counter/WIQA_graph/question/is_less_/functionalsensor-3': {tensor([[0],
        [0]], device='cuda:0'): {'counter': 1, 'recent': True}}, FunctionalSensor(name='functionalsensor-3', fullname='WIQA_graph/question/is_less_/functionalsensor-3'): tensor([[0],
        [0]], device='cuda:0'), Property(name='is_less_', fullname='WIQA_graph/question/is_less_'): tensor([[0],
        [0]], device='cuda:0'), 'Counter/WIQA_graph/question/<is_less>/functionalsensor-9': {tensor([[0],
        [0]], device='cuda:0'): {'counter': 1, 'recent': True}}, FunctionalSensor(name='functionalsensor-9', fullname='WIQA_graph/question/<is_less>/functionalsensor-9'): tensor([[0],
        [0]], device='cuda:0'), Property(name='is_less', fullname='WIQA_graph/question/<is_less>'): tensor([[0],
        [0]], device='cuda:0'), 'Counter/WIQA_graph/question/question_paragraph/functionalsensor': {('The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.', 'The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.'): {'counter': 1, 'recent': True}}, FunctionalSensor(name='functionalsensor', fullname='WIQA_graph/question/question_paragraph/functionalsensor'): ['The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.', 'The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.'], Property(name='question_paragraph', fullname='WIQA_graph/question/question_paragraph'): ['The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.', 'The gravity of the sun pulls its mass inward There is a lot of pressure on the Sun The pressure forces atoms of hydrogen to fuse together in nuclear reactions The energy from the reactions gives off different kinds of light The light travels to the Earth.'], 'Counter/WIQA_graph/question/text/functionalsensor-1': {('suppose more mass pulled happens, how will it affect less light to travel.', 'suppose less mass pulled happens, how will it affect more light to travel.'): {'counter': 1, 'recent': True}}, FunctionalSensor(name='functionalsensor-1', fullname='WIQA_graph/question/text/functionalsensor-1'): ['suppose more mass pulled happens, how will it affect less light to travel.', 'suppose less mass pulled happens, how will it affect more light to travel.'], Property(name='text', fullname='WIQA_graph/question/text'): ['suppose more mass pulled happens, how will it affect less light to travel.', 'suppose less mass pulled happens, how will it affect more light to travel.'], JointSensor(name='jointsensor-1', fullname='WIQA_graph/question/('token_ids', 'Mask')/jointsensor-1'): (tensor([[    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,    55,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,   540,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1],
        [    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,   540,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,    55,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1]]), tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])), Property(name='('token_ids', 'Mask')', fullname='WIQA_graph/question/('token_ids', 'Mask')'): (tensor([[    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,    55,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,   540,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1],
        [    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,   540,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,    55,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1]]), tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])), 'Counter/WIQA_graph/question/token_ids/functionalsensor-6': {tensor([[    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,    55,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,   540,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1],
        [    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,   540,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,    55,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1]], device='cuda:0'): {'counter': 1, 'recent': True}}, FunctionalSensor(name='functionalsensor-6', fullname='WIQA_graph/question/token_ids/functionalsensor-6'): tensor([[    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,    55,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,   540,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1],
        [    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,   540,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,    55,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1]], device='cuda:0'), Property(name='token_ids', fullname='WIQA_graph/question/token_ids'): tensor([[    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,    55,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,   540,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1],
        [    0,   133, 17244,     9,     5,  3778, 16427,    63,  2862, 33363,
           345,    16,    10,   319,     9,  1164,    15,     5,  2083,    20,
          1164,  1572, 33310,     9, 18303,     7, 38689,   561,    11,  1748,
         11012,    20,  1007,    31,     5, 11012,  2029,   160,   430,  6134,
             9,  1109,    20,  1109, 12524,     7,     5,  3875,     4,     2,
             2, 16714,  3876,   540,  2862,  2468,  2594,     6,   141,    40,
            24,  3327,    55,  1109,     7,  1504,     4,     2,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
             1,     1,     1,     1,     1,     1]], device='cuda:0'), 'Counter/WIQA_graph/question/Mask/functionalsensor-7': {tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0'): {'counter': 1, 'recent': True}}, FunctionalSensor(name='functionalsensor-7', fullname='WIQA_graph/question/Mask/functionalsensor-7'): tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0'), Property(name='Mask', fullname='WIQA_graph/question/Mask'): tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], device='cuda:0')} with sensor WIQA_graph/question/<is_less>/modulelearner-2
Epoch 1 Training:   0%|          | 41/29714 [00:01<19:53, 24.86it/s]

Traceback (most recent call last):
  File "/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/WIQA_aug.py", line 237, in <module>
    program.train(reader_train_aug, train_epoch_num=1, Optim=lambda param: AdamW(param, lr = args.learning_rate,eps = 1e-8 ), device=cur_device)
  File "/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/../../regr/program/lossprogram.py", line 84, in train
    return super().train(
  File "/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/../../regr/program/program.py", line 270, in train
    self.call_epoch('Training', training_set, self.train_epoch, **kwargs)
  File "/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/../../regr/program/program.py", line 209, in call_epoch
    consume(tqdm(epoch_fn(dataset, **kwargs), total=get_len(dataset), desc=desc))
  File "/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/../../regr/utils.py", line 292, in consume
    collections.deque(it, maxlen=0)
  File "/home/zhengchen/anaconda/anaconda3/envs/domi/lib/python3.9/site-packages/tqdm/std.py", line 1185, in __iter__
    for obj in iterable:
  File "/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/../../regr/program/lossprogram.py", line 121, in train_epoch
    mloss, metric, *output = self.model(data)  # output = (datanode, builder)
  File "/home/zhengchen/anaconda/anaconda3/envs/domi/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/../../regr/program/model/pytorch.py", line 95, in forward
    *out, = self.populate(builder)
  File "/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/../../regr/program/model/pytorch.py", line 239, in populate
    data_item = self.inference(builder)
  File "/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/../../regr/program/model/pytorch.py", line 218, in inference
    sensor(builder)
  File "/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/../../regr/sensor/pytorch/sensors.py", line 34, in __call__
    self.update_context(data_item)
  File "/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/../../regr/sensor/pytorch/sensors.py", line 156, in update_context
    self.update_pre_context(data_item)
  File "/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/../../regr/sensor/pytorch/sensors.py", line 140, in update_pre_context
    sensor(data_item)
  File "/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/../../regr/sensor/pytorch/sensors.py", line 34, in __call__
    self.update_context(data_item)
  File "/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/../../regr/sensor/pytorch/sensors.py", line 158, in update_context
    val = self.forward_wrap()
  File "/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/../../regr/sensor/pytorch/sensors.py", line 176, in forward_wrap
    value = self.forward(*self.inputs)
  File "/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/../../regr/sensor/pytorch/sensors.py", line 453, in forward
    return self.module(*inputs)
  File "/home/zhengchen/anaconda/anaconda3/envs/domi/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/data/hlr/chenzheng/data/domiknows_project/DomiKnowS/examples/WIQA/WIQA_models.py", line 14, in forward
    last_hidden_state, pooled_output = self.bert(input_ids=input_ids,attention_mask=attention_mask,return_dict=False)
  File "/home/zhengchen/anaconda/anaconda3/envs/domi/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/zhengchen/anaconda/anaconda3/envs/domi/lib/python3.9/site-packages/transformers/models/roberta/modeling_roberta.py", line 844, in forward
    encoder_outputs = self.encoder(
  File "/home/zhengchen/anaconda/anaconda3/envs/domi/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/zhengchen/anaconda/anaconda3/envs/domi/lib/python3.9/site-packages/transformers/models/roberta/modeling_roberta.py", line 522, in forward
    layer_outputs = layer_module(
  File "/home/zhengchen/anaconda/anaconda3/envs/domi/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/zhengchen/anaconda/anaconda3/envs/domi/lib/python3.9/site-packages/transformers/models/roberta/modeling_roberta.py", line 409, in forward
    self_attention_outputs = self.attention(
  File "/home/zhengchen/anaconda/anaconda3/envs/domi/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/zhengchen/anaconda/anaconda3/envs/domi/lib/python3.9/site-packages/transformers/models/roberta/modeling_roberta.py", line 337, in forward
    self_outputs = self.self(
  File "/home/zhengchen/anaconda/anaconda3/envs/domi/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/zhengchen/anaconda/anaconda3/envs/domi/lib/python3.9/site-packages/transformers/models/roberta/modeling_roberta.py", line 239, in forward
    attention_scores = torch.matmul(query_layer, key_layer.transpose(-1, -2))
RuntimeError: CUDA out of memory. Tried to allocate 20.00 MiB (GPU 0; 23.65 GiB total capacity; 22.16 GiB already allocated; 4.31 MiB free; 22.19 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
